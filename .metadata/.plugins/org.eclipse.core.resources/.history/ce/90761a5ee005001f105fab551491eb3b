package user2.pages;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;

import javax.swing.*;

import user2.menu.*;


public class connexion extends Pageherit implements ActionListener
{
	private JTextField mail;
	private JPasswordField password;
	private JLabel label;
	private JLabel label2;
	private JLabel Titre;
	private JButton connect;
	private Vector<String> contacts;
	
	public connexion()
		{	super();
			fenetreprincipale();//On initialise notre fenetre
		}
	
		private JPanel contenufenetreconnec()
		{
			JPanel panel = new JPanel();
			
			panel.setLayout(new FlowLayout());
			panel.setBackground(new Color(50,50,150));
			setLayout(new FlowLayout(FlowLayout.CENTER,50,10));
			Titre=new JLabel("Bienvenue dans Chouch Messenger",JLabel.CENTER);
			panel.add(Titre);
					
			//on cree le premier champ demandant l'adresse e-mail
			label = new JLabel("Adresse e-mail");
			panel.add(label);
			mail = new JTextField(15);
			panel.add(mail);

			
			//on cree le second champ demandant le mot de passe avec un champ password
			label2 = new JLabel("Mot de passe");
			panel.add(label2);
			password = new JPasswordField(15);
			panel.add(password);	
	
			connect=new JButton("Connexion");
			panel.add(connect);
			
			return panel;
		}
		
		
		 //fonction pour recuperer les champs adresse e-mail et mot de passe
				public JTextField getTextField()
				{
					return mail;
				}
				
				public JTextField getpassword()
				{
					return password;
				}
				
				private void fenetreprincipale()
				{
					setTitle("Page de connexion"); //On donne un titre a l'application
					setSize(300,600); //On donne une taille a notre fenetre
					setLocationRelativeTo(null); //On centre la fenetre sur l'ecran
					setResizable(false); //On interdit la redimensionnement de la fenetre
					setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //On dit a l'application de se fermer lors du clic sur la croix
					setContentPane(Pageglobale());
					setContentPane(contenufenetreconnec()); //on appelle la methode qui ajoutera du texte dans notre fenetre
				}

				@Override
				public void actionPerformed(ActionEvent e) {
					// TODO Auto-generated method stub
					
				}
				
				/*public void login(String u, String p) {
					//envoi au serveur/verif...
				}
				
				public Vector<String> getContacts(){
					return contacts;
					//recup contacts
				}

				public void startApp(String u,String p,int s){  
				
						user.setEnabled(false);
						pwd.setEnabled(false);
						connect.setEnabled(false);
						
						login(u,p);		
						//contact
						
						//fenetre de tchat
				}

				public void actionPerformed(ActionEvent e) {
					if(e.getSource()==connect){  
						Thread application = new Thread(){  
							public void run(){
								String u = user.getText();
								String p = new String(pwd.getPassword());
								int s = 1;//
								startApp(u,p,s);	
							}
						};
						application.start();
					}
				}*/
	}
				
