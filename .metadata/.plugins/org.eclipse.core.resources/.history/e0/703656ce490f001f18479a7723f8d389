package windows.window;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;

import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

import windows.actions.Bouton_Changement_status;
import windows.actions.Clicks_Contact;
import windows.actions.Menu_Ajout_Contact;
import windows.actions.Menu_Ajout_Groupe;
import windows.actions.Menu_Changement_Pseudo;
import windows.actions.Menu_Deconnexion;
import windows.actions.Menu_pref;
import windows.actions.Menu_principal_apropos;
import windows.actions.Menu_principal_quit;

public class pannel_contact extends JPanel{

	private static final long serialVersionUID = 1L;
	private JLabel Titre;
	private JLabel Soustitre;
	private JTree  tree;
	private String pseudo;
	private JComboBox changstatus;

	private int status2;
	private JTextField msgperso;

	public pannel_contact(){
		BuildFenetre();
		pseudo="kikoo";
	}

	private void BuildFenetre(){
		
		setLayout(new FlowLayout());
		setBackground(new Color(128,128,255));
		setLayout(new FlowLayout(FlowLayout.CENTER,200,10));
		
		Titre=new JLabel("Vous etes connecté en tant que " + pseudo,JLabel.CENTER);
		
		changstatus= new JComboBox();
		changstatus.addItem("Offline");
		changstatus.addItem("Online");
		changstatus.addItem("Busy");
		changstatus.addItem("AFK");
		changstatus.setSelectedIndex(status2);
		changstatus.addActionListener(new Bouton_Changement_status(changstatus));
		msgperso = new JTextField(20);
		
		Soustitre = new JLabel("Liste de vos contacts : ");
		
		add(Titre);
		add(changstatus);
		add(msgperso);
		add(Soustitre);
		
		setlistcontact();	    
	}
	
	private void setlistcontact(){
		
		//définition de la racine
		DefaultMutableTreeNode root = new DefaultMutableTreeNode("Contacts");
		 
		// Construction des différents noeuds de l'arbre.
		DefaultMutableTreeNode groupe = new DefaultMutableTreeNode("Autres Contacts");
		root.add(groupe);
		DefaultMutableTreeNode contact = new DefaultMutableTreeNode("truc");
		groupe.add(contact);
		contact = new DefaultMutableTreeNode("truc2");
		groupe.add(contact);
		groupe = new DefaultMutableTreeNode("Amis");
		root.add(groupe);
		contact = new DefaultMutableTreeNode("truc3");
		groupe.add(contact);
		     
		// Construction du modèle de l'arbre.
		DefaultTreeModel myModel = new DefaultTreeModel(root);
		 
		// Construction de l'arbre.
		tree = new JTree(myModel);
		
		/*
		// Construction d'un afficheur par défaut.
		DefaultTreeCellRenderer myRenderer = new DefaultTreeCellRenderer();
		 
		// Changement de l'icône pour les feuilles de l'arbre.
		myRenderer.setLeafIcon(new ImageIcon("pageIcon.png"));
		// Changement de l'icône pour les noeuds fermés.
		myRenderer.setClosedIcon(new ImageIcon("closedBookIcon.png"));
		// Changement de l'icône pour les noeuds ouverts.
		myRenderer.setOpenIcon(new ImageIcon("openBookIcon.png"));
		 
		// Application de l'afficheur à l'arbre.
		myTree.setCellRenderer(myRenderer);
		*/

		tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
		tree.addMouseListener(new Clicks_Contact(tree));
		tree.setRootVisible(false);
		add(tree);
		JScrollPane treeAvecAscenseur = new JScrollPane(tree);
		treeAvecAscenseur.setPreferredSize(new Dimension(150, 300));
		add(treeAvecAscenseur);
	}
	

}
