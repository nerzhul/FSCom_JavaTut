package windows.forms;

import java.awt.Component;

import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

import session.contact;

public class MyRenderer extends DefaultTreeCellRenderer {
 
 
	private static final long serialVersionUID = -3991603773928897980L;
	private ImageIcon afkIcon;
	private ImageIcon busyIcon;
	private ImageIcon offlineIcon;
	private ImageIcon onlineIcon;

 
	public MyRenderer(String afk, String busy, String offline, String online) {
		afkIcon = new ImageIcon(afk);
		busyIcon = new ImageIcon(busy);
		offlineIcon = new ImageIcon(offline);
		onlineIcon = new ImageIcon(online);
	}
 
	public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
	    super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
	    
	    DefaultMutableTreeNode node = (DefaultMutableTreeNode) value;
	    
	    /*String info = (String)(node.getUserObject());
	    System.out.println(info);
	   /* Integer status = info.getStatus();
	    if (status.equals(1)){
	    	setIcon(onlineIcon);
	    } /*else if (nodeInfo.equals("busy")) {
	    	setIcon(busyIcon);
	    } else if (nodeInfo.equals("offline")) {
	    	setIcon(offlineIcon);
	    } else if (nodeInfo.equals("online")) {
	    	setIcon(onlineIcon);
	    }*/
	   
	    setOpenIcon(new ImageIcon("ouvert.png"));
	    setClosedIcon(new ImageIcon("fermer.png"));
	    return this;
	}
}
